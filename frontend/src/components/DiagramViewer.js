import React, { useEffect, useRef, useState } from 'react';
import mermaid from 'mermaid';

const DiagramViewer = ({ mermaidCode }) => {
  const diagramRef = useRef(null);
  const [svgContent, setSvgContent] = useState('');
  const [error, setError] = useState('');

  // Initialize Mermaid
  useEffect(() => {
    mermaid.initialize({
      startOnLoad: true,
      theme: 'default',
      securityLevel: 'loose',
      fontFamily: 'inherit',
      flowchart: {
        useMaxWidth: false,
        htmlLabels: true,
        curve: 'basis',
      },
      sequence: {
        useMaxWidth: false,
        noteMargin: 10,
        actorMargin: 50,
      },
      class: {
        useMaxWidth: false,
      },
    });
  }, []);

  // Render diagram when mermaidCode changes
  useEffect(() => {
    const renderDiagram = async () => {
      if (!mermaidCode) {
        setSvgContent('');
        setError('');
        return;
      }

      try {
        setError('');
        
        // Validate Mermaid syntax first
        try {
          await mermaid.parse(mermaidCode);
        } catch (parseError) {
          console.error('Mermaid parse error:', parseError);
          setError('Invalid diagram syntax generated by AI. Please try again.');
          return;
        }

        // Render the diagram
        const { svg } = await mermaid.render('mermaid-diagram', mermaidCode);
        setSvgContent(svg);
      } catch (error) {
        console.error('Error rendering diagram:', error);
        setError('Failed to render diagram. The generated Mermaid code might be invalid.');
      }
    };

    renderDiagram();
  }, [mermaidCode]);

  if (!mermaidCode) {
    return (
      <div className="flex items-center justify-center h-96 bg-gray-50 rounded-lg border-2 border-dashed border-gray-300">
        <div className="text-center text-gray-500">
          <div className="w-16 h-16 mx-auto mb-4 bg-gray-200 rounded-full flex items-center justify-center">
            <svg className="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
          </div>
          <p className="text-sm">No diagram generated yet</p>
          <p className="text-xs mt-1">Paste your code and click "Generate Diagram"</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="h-96 bg-red-50 border border-red-200 rounded-lg p-6 flex items-center justify-center">
        <div className="text-center">
          <div className="w-16 h-16 mx-auto mb-4 bg-red-100 rounded-full flex items-center justify-center">
            <svg className="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
          </div>
          <p className="text-red-800 font-medium mb-2">Diagram Error</p>
          <p className="text-red-600 text-sm">{error}</p>
          <p className="text-red-500 text-xs mt-2">
            This might be due to invalid Mermaid syntax generated by the AI.
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="relative">
      <div
        ref={diagramRef}
        className="mermaid-diagram-container bg-white rounded-lg border border-gray-200 overflow-auto max-h-96"
        dangerouslySetInnerHTML={{ __html: svgContent }}
      />
      
      {svgContent && (
        <div className="mt-3 p-3 bg-gray-50 rounded-lg border">
          <h4 className="text-sm font-medium text-gray-700 mb-2">Generated Mermaid Code:</h4>
          <pre className="text-xs bg-gray-100 p-3 rounded overflow-x-auto">
            <code>{mermaidCode}</code>
          </pre>
        </div>
      )}
    </div>
  );
};

export default DiagramViewer;
